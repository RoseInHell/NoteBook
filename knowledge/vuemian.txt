VUE是MVVM框架，什么是MVVM了？：
	Model-View-ViewModel的缩写，MVVM是一种设计思想，Model(数据模型：用来存储数据)，View(视图层：用	来展示UI界面和响应用户交互)，ViewModel是一个同步View和Model的对象，ViewModel通过双向数据绑定把	View和Model连接起来，View和Model之间没有直接的联系，因此View的变化会同步到Model中，而Model数据的变化也会立即反应到View上，无需人为干涉，所以开发者只需关注业务逻辑，不需要操作DOM
MVVM和MVC区别：
	MVC也是一种设计思想，Model(数据模型)，View(视图层)，Controller(控制器：监听数据变化和控制视图行为，处理用户交互)
      两者区别不大，主要就是MVC中的controller演变成mvvm中的viewmodel
      mvvm主要解决了mvc中大量的DOM操作使页面渲染性能降低，加载速度变慢，影响用户体验的问题
      MVVM通过数据来显示视图层而不是节点操作

vue,js是什么：Vue.js是一个构建用户界面的渐进式框架。Vue的核心库只关注视图层，方便与第三方库或既有项目整合
vue渐进式的理解：主张少，可以根据开发者的实际需求来不断渐进，而不是一口气全部用上

vue的特性：轻量级的框架，双向数据绑定，指令，插件化
vue的优点：
	低耦合：视图(View)可以独立于数据模型(Model)变化和修改，一个ViewModel可以绑定到不同的View上，当View	             变化的时候Model可以不变，当Model变化时View也可以不变
	可重用性：可以把一些视图逻辑放在一个ViewModel里面，让很多View重复用这段视图逻辑
	独立开发：开发人员可以专注于业务逻辑和数据的开发(ViewModel)，设计人员可以专注于页面设计
	可测试：界面素来是比较难于测试的，而现在测试可针对ViewModel来写

vue.cli项目中src目录每个文件的用法：
           assets文件夹放静态资源，components放组件，router定义路由相关配置，app.vue是应用主组件，main.js入口文件

assets文件夹和static文件夹：
	相同点：都是存放静态资源文件（图片，字体图标，样式文件等）
	不同点：assets中的文件会经过webpack打包压缩，重新编译，而static里的不会被webpack处理，它会被直接复	制到最终的打包目录下面（默认是dist/static），且里面的资源必须使用绝对路径来引用
	（第三方的资源文件如iconfont.css等文件建议放在static中）

vue的双向数据绑定：通过Object.defineProperty()方法来重新定义了对象获取属性值(getter)和设置属性值(setter)的操作来实现的
	Object.defineProperty(obj，'prop'，descriptor) 要定义其上属性的对象，要定义或修改的属性，具体的改变方法
	var obj = {}    //定义一个空对象
	var prop = 'zhao'    // 赋予初始值
	Object.defineProperty(obj, 'prop' , {
		get:function(){}，
		set: function(){}
	})
          数据和视图同步，数据变视图变，视图变数据变
       Vue3将使用ES6的proxy作为其观察者机制，取代之前使用的Object.defineProperty方法

组件之间的传值：
	父组件传子组件：父组件通过标签上面定义传值，子组件通过props方法接受数据
	子组件传父组件：子组件通过$emit方法传递参数

v-show和v-if指令的共同点和不同点：
	v-show指令是通过修改元素的css属性display让其显示或隐藏
	v-if指令是直接销毁和重建DOM达到让元素显示和隐藏
	使用v-show更加节省性能，但当只需要一次显示或隐藏时，使用v-if更加合理

说出几种Vue当中的指令和它的用法：
	v-model双向数据绑定，v-for循环，v-if，v-show显示与隐藏，v-on事件，v-once只绑定一次
	v-model就是个语法糖，背后做了两个操作，v-bind绑定一个value属性，v-on指令给当前元素绑定input事件

v-on可以监听多个方法吗？
	可以，如：<input type="text" v-on="{input : oninput , focus : onFocus , blur : onBlur}">

vue-router有哪几种导航钩子：有三种
	第一种是全局导航钩子：router.beforeEach(to, from, next) ,作用：跳转前进行判断拦截
	第二种：组件内的钩子         第三种：单独路由独享钩子

vue的生命周期是什么：
	vue每个组件都是独立的，每个组件都有一个属于它的生命周期，从一个组件创建，数据初始化，挂载，更新，销	毁，这就是一个组件所谓的生命周期

vue生命周期：总共分为8个阶段，创建前/后，载入前/后，更新前/后，销毁前/后
	创建前/后：在beforeCreate阶段，vue实例的挂载元素el和数据对象data还有methods都没初始化，在created阶段，vue实例的数据对象data和methods有了，el还没有
	载入前/后：在beforeMount阶段，vue实例的$el和data都初始化了，但还是挂载在虚拟的dom节点，在mounted阶段，vue实例挂载完成，页面渲染出来
	更新前/后：beforeUpdate阶段页面显示的数据还是旧的，但data数据是最新的，页面未和最新的数据保持同步，updated阶段页面和数据保持同步，都是最新的
	销毁前/后：beforeDestroy阶段，vue实例已经从运行阶段进入了销毁阶段，但实例身上所有的data和所有的methods，以及过滤器，指令,,,,,,,,,都处于可用状态，此时，还没真正执行销毁的过程，，destroyed阶段什么不可以用了

vue生命周期的作用：生命周期中有多个事件钩子，让我们在控制整个vue实例的过程时更容易形成好的逻辑

第一次页面加载会触发哪几个钩子：beforeCreate , created , beforeMount , mounted 这四个钩子

beforeCreate：可以在这加loading事件，在加载实例时触发
created：初始化完成时的事件写这，结束loading事件，异步请求也适合在这调用
mounted：挂载元素，获取到DOM节点
updated：对数据統一处理，在这写上相应函数
nextTick：更新数据后立即操作dom

为什么避免v-if和v-for一起用？
         v-for比v-if具有更高的优先级，v-if会在循环中重复执行，会影响性能，   
         解决方法，v-for循环computed里的方法，在方法里if

vue-loader是什么？用途有哪些？
	vue-loader是webpack的一个loader，用于处理 . vue文件，将template/js/style转换成js模块
	可以在style样式里写scss或less，template可以加jade（变体的html）等

vue中的数据请求在生命周期的created中
key属性的作用：key来给每个节点做唯一标识（diff算法可以识别“不主动说出”），提高渲染性能，可以避免数据混乱

计算属性(computed)与侦听器(watch)：
	依赖就是一个的值，另一个引用这个值，进行计算，前者一变化，后者也就会变化，前者不变后者不变
	计算属性通过其他变量计算得来的另一个属性，变量变化是重新计算自己的值，计算属性具有缓存，其
	基于响应式依赖进行缓存的，计算属性只有在他的相关依赖发生改变时才会重新求值， 如果依赖值没有
	发生改变，则会立即返回之前的值

	侦听器(watch)是侦听一个特定的值，当该值变化时就执行特定的函数
	一个属性受多个属性影响时用computed，一个值变化会引起一系列值的变化，用watch，watch允许外面执行异步         操作(访问一个API)，限制我们执行该操作的频率，并在我们得到结果前，设置中间状态，这些是计算属性无法做到的

$nextTick的使用：当数据改变后要执行某个操作，而这个操作需要使用随数据改变而改变的DOM结构时，就要用这个，因为数据改变后DOM不会立即重新渲染，这个会在DOM渲染后再调用

vue组件中data为什么必须是一个函数?
	因为javaScript的特性导致，与vue本身设计无关，当data是一个函数时，这样每复用一次组件就会返回一份新的	data，类似于每个组件创建一个私有的数据空间，让各个组件实例维护各自的数据，而写成对象形式就使得所有组	件共用一份data（Object是引用数据类型），一个组件改变data数据，其他的都变了

单页面应用和多页面应用区别及优缺点：
	单页面应用（SPA）就是指只有一个主页面的应用，浏览器一开始要加载所有必须的html,js,css，所有的页面内容	都包含在这个所谓的主页面中，但在写的时候可以分开写（页面片段），然后在交互的时候由路由程序动态载入，		单页面的页面跳转仅刷新局部资源，多用于pc端
	多页面（MPA）就是指一个应用中有多个页面，页面跳转时整页刷新，每次页面跳转，后台服务器就会返回一个		        新的html文档
	
	单页面的优点：用户体验好，块，内容改变不需要加载整个页面，基于这一点对服务器的压力较小
		        前后端分离，页面效果比较酷炫（如切换页面时的动画）
	单页面的缺点：不利于seo检索，不能用浏览器的前进后退功能，需要自己建立堆栈管理
		        初次加载耗时多，页面复杂度高
	多页面的优点：拥有更强的可扩展性，seo检索好
	多页面的缺点：页面切换慢，维护相对难，重复代码多

vue常用的修饰符;
	.stop：防止事件冒泡   .prevent：阻止默认事件   .capture：与事件冒泡的方向相反，事件捕获由外到内
	.self：只会触发自己的事件，不会影响其他元素的事件      .once：只会触发一次

vue的两个核心点：数据驱动（双向数据绑定），组件系统
	数据驱动：ViewModel，保证数据和视图的一致性
	组件系统：应用类UI可以看作全部是由组件树构成的

vue和jquery的区别：
	jquery是使用选择器$选取DOM对象，对其进行取值，赋值，事件绑定等，而数据和界面是在一起的，和原生的		html没什么区别，只是更方便
	vue是通过vue对象将数据和视图完全分离开来，对数据进行操作不需要引用相应的DOM对象

vue-router跳转和location.href有什么区别：
	location.href要刷新页面，  history.pushState()不刷新页面，静态跳转，vue-router跳转和这个没是什么区别，	vue-router就是用了history.pushState(),尤其是在history模式下
		按需加载，减少dom的消耗，根据router前往的路由获取对应的资源并挂载到dom上，但页面并不刷新

vue中插槽模板slot：
	插槽模板slot就是一个空壳子，它的显示与隐藏以及显示什么由父组件控制，插槽显示的位置由子组件决定，简单               说就是父组件决定子组件某个位置的显示（ <template v-slot:header></template>）

router-link在电脑上有用，在安卓上没反应怎么解决？：在安卓上有问题是babel问题，安装babel polypill插件解决
router-link上事件无效的解决方法：使用@click .native 原因：router-link会阻止click等事件

路由传参有两个，query和params，前者用path引入路由，后者用name引入，接受时this.$route.query或params.xxx
query类似于get传参，params类似于post，前者在浏览器url上显示参数，后者不显示,页面刷新query数据不丢失params会

axios发送请求时params和data的区别：
	axios({
	     method: "get",
	     url:   "",
	     params:  {xxx:"xxx"}
	})
	params添加到url上，用于get请求,  data添加在请求体body中,用于post请求

axios的特点：在浏览器中发送XMLHttpRequests请求   ，  在node.js中发送http请求  ,   支持Promise API
	      拦截请求和响应，自动转换为json数据，；转换请求和响应数据 ， 客户端支持防御XSRF

active-class是哪个组件的属性（路由是否激活）？嵌套路由怎么定义（就怎么在一路由下再定义一个子路由）?
	active-class是vue-router模块的router-link组件的属性 ，     用children来定义子路由

怎么定义vue-router的动态路由？怎么获取传过来的值？
	在路由文件中对path属性加/:id，使用router对象的params.id获取值（this.$route.params.id）

$route和$router的区别：
	route为VueRouter的实例，相当于一个全局的路由对象，里面含有很多属性和子对象如history对象
	this.$router.push会往history栈中添加一个新的记录
	route为当前router跳转对象，里面可以获取当前路由的name,path,query,params等

vue-router是什么？它有哪些组件？
	vue用来写路由的一个插件，，，，，router-link ,   router-view

vuex是什么？哪种功能场景使用它？
	是一个专为vue.js应用程序开发的状态管理模式。统一管理和维护各个VUE组件的可变化状态	
	应用场景有：单页应用中，组件之间的状态。如：音乐播放，登录状态，购物车功能等

vuex有哪几种属性？
	State ：数据源存放地
	Getters：从state派生的数据，相当于state的计算属性
	Mutations：提交更新数据的方法，必须是同步的（需要异步使用action）
	Actions：和mutation的功能大致相同，只是action提交的是mutation，而不是直接改变状态，异步的
	Modules：模块化vuex，可以让每个模块拥有自己的state,mutation,action,getters,使结构清晰，方便管理
	
vue.js中ajax请求代码应该写在组件的methods中还是vuex的action中？
	如果数据要被其他组件公用就写在action中，只是请求的组件内使用就写在该组件的methods里

vue-router实现路由懒加载（动态加载路由）：
          一。vue异步组件技术加载（但这种情况下一个组件生成一个Js文件）component: resolve => require(['url'],resolve)
          二。用import   三。用webpack提供的require.ensure()，这情况多个路由指定相同的chunkName,合并打包一个js

vue-router的两种模式：
	hash模式：利用URL的hash（就是通常说的锚点#），通过hashchange事件来监听url的变化，来改变hash值，动态改变页面数据，虽然hash在url中，但不会被包括在HTTP请求中，所以改变hash不会重新加载页面
	history模式：url跟正常网址一样没有#，这模式利用了history.pushState()和history.replaceState()方法，这两个方 法会往历史记录栈里添加记录，可以用history.go()/back()/forwad()前进几次，后退，前进操作,该模		 式充分利用pushState来跳转不需要刷新页面